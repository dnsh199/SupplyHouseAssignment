{"ast":null,"code":"var _jsxFileName = \"/Users/dinesh/Documents/assignment/supplyHouseFE/customer-service-hours/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useEffect, useState } from \"react\";\nimport { regularHours, specialHours } from \"../data\";\nimport RegularHours from \"../components/RegularHours\";\nimport SpecialHours from \"../components/SpecialHours\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [todaySpecialHours, setTodaySpecialHours] = useState([]);\n  useEffect(() => {\n    const today = new Date();\n    const todayDayOfWeek = today.toLocaleString(\"en-US\", {\n      weekday: \"long\"\n    }).toUpperCase(); // e.g., \"MONDAY\"\n    const currentDayRegularHours = regularHours.data.find(hour => hour.dayOfWeek === todayDayOfWeek);\n\n    // Get today's date in \"YYYY-MM-DD\" format\n    const todayDate = today.toISOString().split(\"T\")[0];\n\n    // Fetch all special hours (localStorage + default JSON data)\n    const storedSpecialHours = JSON.parse(localStorage.getItem(\"specialHours\")) || specialHours.data;\n\n    // Filter special hours for today\n    const todaySpecials = storedSpecialHours.filter(hour => hour.date === todayDate);\n\n    // Filter today's specials that overlap with regular hours\n    const overlappingSpecials = todaySpecials.filter(special => isOverlapping(special, currentDayRegularHours));\n    setTodaySpecialHours(overlappingSpecials);\n  }, []);\n\n  // Check if special hours overlap with regular hours\n  const isOverlapping = (special, regular) => {\n    const specialStart = new Date(`1970-01-01T${special.openTime}`);\n    const specialEnd = new Date(`1970-01-01T${special.closeTime}`);\n    const regularStart = new Date(`1970-01-01T${regular.openTime}`);\n    const regularEnd = new Date(`1970-01-01T${regular.closeTime}`);\n    return specialStart >= regularStart && specialStart < regularEnd && specialEnd > regularStart && specialEnd <= regularEnd;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RegularHours, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), todaySpecialHours.length > 0 && /*#__PURE__*/_jsxDEV(SpecialHours, {\n      hours: todaySpecialHours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"bpzlAsYpCXf8+4PRVhSZ0bSBCaw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","regularHours","specialHours","RegularHours","SpecialHours","jsxDEV","_jsxDEV","Home","_s","todaySpecialHours","setTodaySpecialHours","today","Date","todayDayOfWeek","toLocaleString","weekday","toUpperCase","currentDayRegularHours","data","find","hour","dayOfWeek","todayDate","toISOString","split","storedSpecialHours","JSON","parse","localStorage","getItem","todaySpecials","filter","date","overlappingSpecials","special","isOverlapping","regular","specialStart","openTime","specialEnd","closeTime","regularStart","regularEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","length","hours","_c","$RefreshReg$"],"sources":["/Users/dinesh/Documents/assignment/supplyHouseFE/customer-service-hours/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\nimport React, { useEffect, useState } from \"react\";\nimport { regularHours, specialHours } from \"../data\";\nimport RegularHours from \"../components/RegularHours\";\nimport SpecialHours from \"../components/SpecialHours\";\n\nconst Home = () => {\n  const [todaySpecialHours, setTodaySpecialHours] = useState([]);\n\n  useEffect(() => {\n    const today = new Date();\n    const todayDayOfWeek = today.toLocaleString(\"en-US\", { weekday: \"long\" }).toUpperCase(); // e.g., \"MONDAY\"\n    const currentDayRegularHours = regularHours.data.find(\n      (hour) => hour.dayOfWeek === todayDayOfWeek\n    );\n\n    // Get today's date in \"YYYY-MM-DD\" format\n    const todayDate = today.toISOString().split(\"T\")[0];\n\n    // Fetch all special hours (localStorage + default JSON data)\n    const storedSpecialHours =\n      JSON.parse(localStorage.getItem(\"specialHours\")) || specialHours.data;\n\n    // Filter special hours for today\n    const todaySpecials = storedSpecialHours.filter(\n      (hour) => hour.date === todayDate\n    );\n\n    // Filter today's specials that overlap with regular hours\n    const overlappingSpecials = todaySpecials.filter((special) =>\n      isOverlapping(special, currentDayRegularHours)\n    );\n\n    setTodaySpecialHours(overlappingSpecials);\n  }, []);\n\n  // Check if special hours overlap with regular hours\n  const isOverlapping = (special, regular) => {\n    const specialStart = new Date(`1970-01-01T${special.openTime}`);\n    const specialEnd = new Date(`1970-01-01T${special.closeTime}`);\n    const regularStart = new Date(`1970-01-01T${regular.openTime}`);\n    const regularEnd = new Date(`1970-01-01T${regular.closeTime}`);\n\n    return (\n      specialStart >= regularStart &&\n      specialStart < regularEnd &&\n      specialEnd > regularStart &&\n      specialEnd <= regularEnd\n    );\n  };\n\n  return (\n    <div>\n      <RegularHours />\n      {todaySpecialHours.length > 0 && (\n        <SpecialHours hours={todaySpecialHours} />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,YAAY,QAAQ,SAAS;AACpD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,cAAc,GAAGF,KAAK,CAACG,cAAc,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IACzF,MAAMC,sBAAsB,GAAGhB,YAAY,CAACiB,IAAI,CAACC,IAAI,CAClDC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAKR,cAC/B,CAAC;;IAED;IACA,MAAMS,SAAS,GAAGX,KAAK,CAACY,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEnD;IACA,MAAMC,kBAAkB,GACtBC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI3B,YAAY,CAACgB,IAAI;;IAEvE;IACA,MAAMY,aAAa,GAAGL,kBAAkB,CAACM,MAAM,CAC5CX,IAAI,IAAKA,IAAI,CAACY,IAAI,KAAKV,SAC1B,CAAC;;IAED;IACA,MAAMW,mBAAmB,GAAGH,aAAa,CAACC,MAAM,CAAEG,OAAO,IACvDC,aAAa,CAACD,OAAO,EAAEjB,sBAAsB,CAC/C,CAAC;IAEDP,oBAAoB,CAACuB,mBAAmB,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,aAAa,GAAGA,CAACD,OAAO,EAAEE,OAAO,KAAK;IAC1C,MAAMC,YAAY,GAAG,IAAIzB,IAAI,CAAC,cAAcsB,OAAO,CAACI,QAAQ,EAAE,CAAC;IAC/D,MAAMC,UAAU,GAAG,IAAI3B,IAAI,CAAC,cAAcsB,OAAO,CAACM,SAAS,EAAE,CAAC;IAC9D,MAAMC,YAAY,GAAG,IAAI7B,IAAI,CAAC,cAAcwB,OAAO,CAACE,QAAQ,EAAE,CAAC;IAC/D,MAAMI,UAAU,GAAG,IAAI9B,IAAI,CAAC,cAAcwB,OAAO,CAACI,SAAS,EAAE,CAAC;IAE9D,OACEH,YAAY,IAAII,YAAY,IAC5BJ,YAAY,GAAGK,UAAU,IACzBH,UAAU,GAAGE,YAAY,IACzBF,UAAU,IAAIG,UAAU;EAE5B,CAAC;EAED,oBACEpC,OAAA;IAAAqC,QAAA,gBACErC,OAAA,CAACH,YAAY;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACftC,iBAAiB,CAACuC,MAAM,GAAG,CAAC,iBAC3B1C,OAAA,CAACF,YAAY;MAAC6C,KAAK,EAAExC;IAAkB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvC,EAAA,CArDID,IAAI;AAAA2C,EAAA,GAAJ3C,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}